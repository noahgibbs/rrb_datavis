<!DOCTYPE html>
<meta charset="utf-8">
<style>

.bar {
  fill: steelblue;
}

.bar:hover {
  fill: brown;
}

.axis--x path {
  display: none;
}

</style>
<h1>Discourse Throughput w/ Rails Ruby Bench by Number of Warmup Iterations</h1>
<svg width="200" height="600"></svg>
<script src="d3.v4.min.js"></script>
<script>

var svg = d3.select("svg"),
    margin = {top: 20, right: 20, bottom: 220, left: 40},
    width = +svg.attr("width") - margin.left - margin.right,
    height = +svg.attr("height") - margin.top - margin.bottom;

var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),
    y = d3.scaleLinear().rangeRound([height, 0]);

var g = svg.append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

<%
  require "json"

  warmup_data = JSON.parse(File.read "data/process_output.json")

  cohorts = warmup_data["processed"]["cohort"].keys.map(&:to_i).sort

  #percentiles = warmup_data["processed"]["cohort"].values.first["run_percentiles"].keys

  %>

<%
fill_by_warmups = {
  0 => '#e7cbe6',
  1 => '#d8aad6',
  10 => '#a888c2',
  100 => '#9dc2d3',
  1000 => '#649eb9',
  5000 => '#387aa3',
  10000 => '#f0d080',
}
%>

var ruby_version_data = [
  <% cohorts.each do |cohort|
       num_warmups = cohort
       column_title =  "#{num_warmups} warmups"
     %>

    {
      "col_title": "<%= column_title %>",
      "fill": <%= fill_by_warmups[num_warmups].inspect %>,
      "time": <%= warmup_data["processed"]["cohort"][cohort.to_s]["throughput_median"].inspect %>
    },
  <% end %>
  {}
];

ruby_version_data.pop(); // Remove final empty element

x.domain(ruby_version_data.map(function(d) { return d.col_title; }));
y.domain([0, d3.max(ruby_version_data, function(d) { return d.time; })]);

g.append("g")
   .attr("class", "axis axis--x")
   .attr("transform", "translate(0," + height + ")")
   .call(customXaxis);
   //.call(d3.axisBottom(x));

g.append("g")
   .attr("class", "axis axis--y")
   .call(d3.axisLeft(y))

g.selectAll(".bar")
 .data(ruby_version_data)
 .enter().append("rect")
   .attr("class", "bar")
   .attr("x", function(d) { return x(d.col_title); })
   .attr("y", function(d) { return y(d.time); })
   .style("fill", function(d) { return d.fill })
   .attr("width", x.bandwidth())
   .attr("height", function(d) { return height - y(d.time); });

function customXaxis(g) {
  g.call(d3.axisBottom(x));
  //g.selectAll(".axis--x .tick").attr("transform", "translate(0,100)");
  g.selectAll(".axis--x .tick text").attr("transform", "translate(-15,70)rotate(-90)");
}

</script>
